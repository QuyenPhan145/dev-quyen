# YAML for launching the orderer
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: peer1-thuduchospital
  labels:
    app: peer1-thuduchospital
spec:
  serviceName: peer1-thuduchospital
  replicas: 1
  selector:
    matchLabels:
      app: peer1-thuduchospital
  template:
    metadata:
      labels:
        app: peer1-thuduchospital
    spec:
      containers:
      - name: peer1-thuduchospital
        # Image used
        image: nhutori4/quyen-peer1-thuduc:dev
        # Uncomment the following during development/testing of the image
        imagePullPolicy: Always
        env:
          - name: FABRIC_LOGGING_SPEC
            value: INFO
          - name: ORDERER_ADDRESS
            value: orderer1-ordererorg:30750
          - name: CORE_PEER_ADDRESS
            value: peer1-thuduchospital:30751
          - name: FABRIC_LOGGING_SPEC
            value: debug
          - name: CORE_PEER_TLS_ENABLED
            value: "true"
          - name: CORE_PEER_GOSSIP_USELEADERELECTION
            value: "false"
          - name: CORE_PEER_GOSSIP_ORGLEADER
            value: "true"
          - name: CORE_PEER_GOSSIP_EXTERNALENDPOINT
            value: peer1-thuduchospital:30751
          - name: CORE_PEER_GOSSIP_SKIPHANDSHAKE
            value: "true"
          # Replacement for set-context in alpine
          # - name: MSP_ID
          #   value: AcmeMSP
          # - name: ORG_NAME
          #   value: AcmeMSP
          # - name: CORE_PEER_MSPCONFIGPATH
          #   value:  /var/hyperledger/config/users/Admin@acme.com/msp
        volumeMounts:
        - name: peer1-thuduchospital-ledger
          mountPath: /var/ledger
        - name: dockersock
          mountPath: /var/run/docker.sock
      volumes:
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
  volumeClaimTemplates:
  - metadata: 
      name: peer1-thuduchospital-ledger
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: storageclass-thuduchospital
      resources:
        requests:
          storage: 1Gi

---
# Expose the port 7051 as ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: peer1-thuduchospital

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: peer1-thuduchospital

  ports:
    - name: peer1-thuduchospital
      port: 30751
    - name: peer1-thuduchospital-cc-clusterip
      port: 30752

  type: ClusterIP

---
# Expose the port 30751 as node port -  NEEDED if you
# are interested in connecting to the Pods from the Host
# machine - keep in mind you would need the IP for the node
# port service
apiVersion: v1
kind: Service
metadata:
  name: peer1-thuduchospital-nodeport

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: peer1-thuduchospital

  ports:
    - name: peer1-thuduchospital-nodeport-751
      port: 30751
      nodePort: 30751
    - name: peer1-thuduchospital-cc-nodeport-752
      port: 30752
      nodePort: 30752

  type: NodePort
